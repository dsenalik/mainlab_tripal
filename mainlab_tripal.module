<?php

/**
 * @defgroup mainlab_tripal Library
 * @{
 * Provides functions for display and management of data in custom tables
 * @}
 * @ingroup tripal_modules
 */

require_once "includes/mainlab_tripal_generate_var.inc";
require_once "includes/custom_schema.inc";
require_once "includes/simple_seq_extract.inc";
require_once "includes/stock_listing.page.inc";

require_once 'theme/mainlab_tripal.theme.inc';

/**
 *
 * @ingroup tripal_feature
 */
function mainlab_tripal_init() {
  drupal_add_css(drupal_get_path('module', 'mainlab_tripal') . '/theme/mainlab/css/mainlab_tripal.css');
}

/**
 * Menu items are automatically added for the new node types created
 * by this module to the 'Create Content' Navigation menu item.  This function
 * adds more menu items needed for this module.
 *
 * @ingroup mainlab_tripal
 */
function mainlab_tripal_menu() {
  $items = array();
  
  $items['admin/mainlab_tripal'] = array(
    'title' => 'Mainlab Tripal',
    'description' => ('Settings for the mainlab tripal custom displays.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mainlab_tripal_admin_form'),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/mainlab_tripal.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  // the custom sequence retrieval form
  $items['retrieve/sequences'] = array(
    'title' => 'Sequence Retrieval',
    'description' => 'Download a file of sequences',
    'page callback' => 'mainlab_tripal_seq_extract_page',
    'access arguments' => array('access chado_feature content'),
    'type' => MENU_CALLBACK,
  );
  

  // The polymorphism page
  $items['polymorphism/%'] = array(
  		'title' => 'Polymorphism',
  		'page callback' => 'mainlab_show_polymorphism',
  		'page arguments' => array(1),
  		'access arguments' => array('access content'),
  		'file' => 'includes/polymorphism.page.inc',
  		'type' => MENU_CALLBACK
  );
  // The allele page
  $items['allele/%/%/%'] = array(
  		'title' => 'Allele',
  		'page callback' => 'mainlab_show_allele',
  		'page arguments' => array(1,2,3),
  		'access arguments' => array('access content'),
  		'file' => 'includes/allele.page.inc',
  		'type' => MENU_CALLBACK
  );
  
  if (mainlab_tripal_get_site() == 'gdr') {
  	$items['polymorphism/%']['file'] = 'includes/gdr_polymorphism.page.inc';
  	$items['allele/%/%/%']['file'] = 'includes/gdr_allele.page.inc';
  }
  
  // The sequence listing page
  $items['feature_listing/%/%/%'] = array(
  		'title' => 'Sequences',
  		'page callback' => 'mainlab_feature_listing',
  		'page arguments' => array(1,2,3),
  		'access arguments' => array('access content'),
  		'file' => 'includes/feature_listing.page.inc',
  		'type' => MENU_CALLBACK
  );
  // Switching page for the stock listing
  $items['stock_listing_page/%/%'] = array(
  		'page callback' => 'mainlab_stock_listing_switch_page',
  		'page arguments' => array(1,2),
  		'access arguments' => array('access content'),
  		'type' => MENU_CALLBACK
  );
  
  // The gene class browser
  $items['gene_class_listing'] = array(
  		'page callback' => 'mainlab_gene_class_listing_page',
  		'page arguments' => array(1),
  		'access arguments' => array('access content'),
  		'type' => MENU_CALLBACK,
  		'file' => 'includes/gene_class_listing.page.inc',
  );
  
  // The gene class page
  $items['gene_class'] = array(
  		'page callback' => 'mainlab_gene_class_page',
  		'page arguments' => array(1),
  		'access arguments' => array('access content'),
  		'type' => MENU_CALLBACK,
  		'file' => 'includes/gene_class.page.inc',
  );
  
  // Replicate Tripal Pub Search URLs
  $items['search/publications' ]= array(
      'title' => 'Publication Search',
      'description' => ('Search for publications'),
      'page callback' => 'tripal_pub_search_page',
      'access arguments' => array('access chado_pub content'),
      'type' => MENU_CALLBACK
  );  
  $items['search/publications/criteria/%/%'] = array(
      'page callback' => 'tripal_pub_search_page_update_criteria',
      'page arguments' => array(5, 6),
      'access arguments' => array('access chado_pub content'),
      'type ' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_nodeapi().
 *
 * @ingroup mainlab_qtl
 */
function mainlab_tripal_node_view($node, $view_mode, $langcode) {
  switch ($node->type) {
  	
    // Organism
  	case 'chado_organism' :
  	  if ($view_mode == 'full') {
  	    $site = mainlab_tripal_get_site();
  	    if ($site == 'cottongen') {
  	      $node = mainlab_tripal_generate_organism_relationships_var($node);
  	      $node->content['cottongen_tripal_organism_base'] = array(
  	        '#markup' => theme('cottongen_tripal_organism_base',  array('node' => $node)),
  	        '#tripal_toc_id'    => 'overview',
  	        '#tripal_toc_title' => 'Overview',
  	        '#weight' => -100,
  	      );
  	      $node->content['cottongen_tripal_organism_alias'] = array(
  	        '#markup' => theme('cottongen_tripal_organism_alias',  array('node' => $node)),
  	        '#tripal_toc_id'    => 'alias',
  	        '#tripal_toc_title' => 'Alias',
  	        '#weight' => -90,
  	      );
  	      $node->content['tripal_organism_relationships'] = array(
  	        '#markup' => theme('tripal_organism_relationships',  array('node' => $node)),
  	        '#tripal_toc_id'    => 'relationships',
  	        '#tripal_toc_title' => 'Fertile/Sterile/Incompatible Species',
  	        '#weight' => -80,
  	      );
  	      $node->content['cottongen_tripal_organism_stocks'] = array(
  	        '#markup' => theme('cottongen_tripal_organism_stocks',  array('node' => $node)),
  	        '#tripal_toc_id'    => 'stocks',
  	        '#tripal_toc_title' => 'Germplasm',
  	        '#weight' => -70,
  	      );
  	    }
  	    else {
  	      $node->content['tripal_organism_custom_base'] = array(
            '#markup' => theme('tripal_organism_custom_base',  array('node' => $node)),
            '#tripal_toc_id'    => 'overview',
            '#tripal_toc_title' => 'Species Overview',
            '#weight' => -100,
          );
  	    }
  	  }
  	break;
    
    // Feature
    case 'chado_feature' :
      if ($view_mode == 'full') {
        $node->content['tripal_feature_custom_references'] = array(
          '#markup' => theme('tripal_feature_custom_references',  array('node' => $node)),
          '#tripal_toc_id' => 'tripal_feature_custom_references',
          '#tripal_toc_title' => 'Cross References',
          '#weight' => 2,
        );
        switch ($node->feature->type_id->name) {
          // Genetic Marker
          case 'genetic_marker':
            $node->content['tripal_feature_genetic_marker_base'] = array(
              '#markup' => theme('tripal_feature_genetic_marker_base',  array('node' => $node)),
              '#tripal_toc_id'    => 'genetic_marker',
              '#tripal_toc_title' => 'Marker Overview',
              '#weight' => -100,
            );
            $node->content['tripal_feature_genetic_marker_map_positions'] = array(
              '#markup' => theme('tripal_feature_genetic_marker_map_positions',  array('node' => $node)),
              '#tripal_toc_id' => 'genetic_marker_map_position',
              '#tripal_toc_title' => 'Map Positions',
              '#weight' => -90,
            );
            $node->content['tripal_feature_genetic_marker_genotypes'] = array(
              '#markup' => theme('tripal_feature_genetic_marker_genotypes',  array('node' => $node)),
              '#tripal_toc_id' => 'genetic_marker_genotypes',
              '#tripal_toc_title' => 'Genotypes',
              '#weight' => -80,
            );
            $node->content['tripal_feature_genetic_marker_contacts'] = array(
              '#markup' => theme('tripal_feature_contact',  array('node' => $node)),
              '#tripal_toc_id' => 'genetic_marker_contacts',
              '#tripal_toc_title' => 'Contacts',
              '#weight' => 1,
            );
            $node->content['tripal_feature_genetic_marker_sequence'] = array(
              '#markup' => theme('tripal_feature_genetic_marker_sequence',  array('node' => $node)),
              '#tripal_toc_id' => 'genetic_marker_sequence',
              '#tripal_toc_title' => 'Sequence',
              '#weight' => 5,
            );
            $node->content['tripal_feature_genetic_marker_image'] = array(
              '#markup' => theme('tripal_feature_genetic_marker_image',  array('node' => $node)),
              '#tripal_toc_id' => 'genetic_marker_image',
              '#tripal_toc_title' => 'Images',
              '#weight' => 10,
            );
            break;
          // Sequence Feature
          case 'sequence_feature':
            $node->content['tripal_feature_sequence_feature_base'] = array(
              '#markup' => theme('tripal_feature_sequence_feature_base',  array('node' => $node)),
              '#tripal_toc_id'    => 'sequence_feature',
              '#tripal_toc_title' => 'Sequence Overview',
              '#weight' => -100,
            );
            break;
        }
      }
      break;
      
      // Stock
      case 'chado_stock' :
        if ($view_mode == 'full') {
          if (db_table_exists('chado.library_stock')) {
            $stock = chado_expand_var($node->stock, 'table', 'library_stock', array('return_array' => 1));
            $node->stock = $stock;
          }
          $node = mainlab_tripal_generate_stock_in_collection_var ($node);
          $node = mainlab_tripal_generate_stock_parents_var ($node);
          $node = mainlab_tripal_generate_tripal_stock_phenotypic_data_var ($node);
          $node = mainlab_tripal_generate_tripal_stock_genotypic_data_var ($node);
          $node = mainlab_tripal_generate_stock_image_var ($node);
             $node->content['tripal_stock_custom_base'] = array(
            '#markup' => theme('tripal_stock_custom_base',  array('node' => $node)),
            '#tripal_toc_id'    => 'germplasm',
            '#tripal_toc_title' => 'Germplasm Overview',
            '#weight' => -100,
            );
            $node->content['tripal_stock_alias'] = array(
               '#markup' => theme('tripal_stock_alias',  array('node' => $node)),
               '#tripal_toc_id'    => 'alias',
               '#tripal_toc_title' => 'Alias',
               '#weight' => -97,
            );
            $node->content['tripal_stock_in_collection'] = array(
              '#markup' => theme('tripal_stock_in_collection',  array('node' => $node)),
              '#tripal_toc_id'    => 'in_collection',
              '#tripal_toc_title' => 'In Collection',
              '#weight' => -95,
            );
            $node->content['tripal_stock_maternal_parent'] = array(
              '#markup' => theme('tripal_stock_maternal_parent',  array('node' => $node)),
              '#tripal_toc_id'    => 'maternal_parent',
              '#tripal_toc_title' => 'Maternal Parent',
              '#weight' => -90,
            );
            $node->content['tripal_stock_paternal_parent'] = array(
              '#markup' => theme('tripal_stock_paternal_parent',  array('node' => $node)),
              '#tripal_toc_id'    => 'paternal_parent',
              '#tripal_toc_title' => 'Paternal Parent',
              '#weight' => -85,
            );
            $node->content['tripal_stock_phenotypic_data'] = array(
              '#markup' => theme('tripal_stock_phenotypic_data',  array('node' => $node)),
              '#tripal_toc_id'    => 'phenotypic_data',
              '#tripal_toc_title' => 'Phenotypic Data',
              '#weight' => -83,
            );
            $node->content['tripal_stock_genotypic_data'] = array(
              '#markup' => theme('tripal_stock_genotypic_data',  array('node' => $node)),
              '#tripal_toc_id'    => 'genotypic_data',
              '#tripal_toc_title' => 'Genotypic Data',
              '#weight' => -80,
            );
            $node->content['tripal_stock_population_map'] = array(
              '#markup' => theme('tripal_stock_population_map',  array('node' => $node)),
              '#tripal_toc_id'    => 'population_map',
              '#tripal_toc_title' => 'Map',
              '#weight' => -70,
            );
            $node->content['tripal_stock_library'] = array(
              '#markup' => theme('tripal_stock_library',  array('node' => $node)),
              '#tripal_toc_id'    => 'library',
              '#tripal_toc_title' => 'Library',
              '#weight' => -65,
            );
            $node->content['tripal_stock_image'] = array(
              '#markup' => theme('tripal_stock_image',  array('node' => $node)),
              '#tripal_toc_id'    => 'image',
              '#tripal_toc_title' => 'Images',
              '#weight' => -60,
            );
        }
      break;
      
      // Map
      case 'chado_featuremap' :
        if ($view_mode == 'full') {
          $node->content['tripal_featuremap_custom_base'] = array(
            '#markup' => theme('tripal_featuremap_custom_base',  array('node' => $node)),
            '#tripal_toc_id'    => 'featuremap',
            '#tripal_toc_title' => 'Map Overview',
            '#weight' => -100,
          );
          $node->content['tripal_featuremap_stock'] = array(
            '#markup' => theme('tripal_featuremap_stock',  array('node' => $node)),
            '#tripal_toc_id'    => 'stock',
            '#tripal_toc_title' => 'Germplasm',
            '#weight' => -90,
          );
          $node->content['tripal_featuremap_stock'] = array(
            '#markup' => theme('tripal_featuremap_map_loci',  array('node' => $node)),
            '#tripal_toc_id'    => 'map_loci',
            '#tripal_toc_title' => 'Map Loci',
            '#weight' => -90,
          );
          $node->content['tripal_featuremap_contact'] = array(
            '#markup' => theme('tripal_featuremap_contact',  array('node' => $node)),
            '#tripal_toc_id'    => 'contact',
            '#tripal_toc_title' => 'Contact',
            '#weight' => 10,
          );
        }
        break;
      //Environment
        case 'chado_nd_geolocation' :
          if ($view_mode == 'full') {
            $node = mainlab_tripal_generate_nd_geolocation_var ($node);
            $node->content['tripal_nd_geolocation_custom_base'] = array(
              '#markup' => theme('tripal_nd_geolocation_custom_base',  array('node' => $node)),
              '#tripal_toc_id'    => 'overview',
              '#tripal_toc_title' => 'Environment Overview',
              '#weight' => -100,
            );
            $node->content['tripal_nd_geolocation_associated_dataset'] = array(
              '#markup' => theme('tripal_nd_geolocation_associated_dataset',  array('node' => $node)),
              '#tripal_toc_id'    => 'associated_dataset',
              '#tripal_toc_title' => 'Associated Dataset',
              '#weight' => -50,
            );
          }
          break;
        // Pub
        case 'chado_pub' :
          if ($view_mode == 'full') {
            $node->content['tripal_pub_image'] = array(
              '#markup' => theme('tripal_pub_image',  array('node' => $node)),
              '#tripal_toc_id'    => 'image',
              '#tripal_toc_title' => 'Images',
              '#weight' => 100,
            );
          }
          break;
        // Eimage
        case 'chado_eimage' :
          if ($view_mode == 'full') {
            $node->content['cottongen_tripal_eimage_base'] = array(
              '#markup' => theme('cottongen_tripal_eimage_base',  array('node' => $node)),
              '#tripal_toc_id'    => 'overview',
              '#tripal_toc_title' => 'Overview',
              '#weight' => -100,
            );
            $node->content['tripal_eimage_contact'] = array(
              '#markup' => theme('tripal_eimage_contact',  array('node' => $node)),
              '#tripal_toc_id'    => 'contact',
              '#tripal_toc_title' => 'Contact',
              '#weight' => -90,
            );
          }
          break;
  }
}

/**
 * Implementation of hook_nodeapi().
 * 
 * @ingroup mainlab_qtl
 */
function mainlab_tripal_node_view_alter(&$build) {
  $node = $build['#node'];
  // Hide default templates
  
  // Organism
  if (property_exists($node, 'organism')) {
    unset($build['tripal_organism_base']);
    $site = mainlab_tripal_get_site();
    if ($site == 'cottongen') {
      unset($build['tripal_organism_stocks']);
      unset($build['tripal_organism_properties']);
    }
  }
  
  //Feature
  if (property_exists($node, 'feature')) {
    unset($build['tripal_feature_references']);
    switch ($node->feature->type_id->name) {
      case 'genetic_marker':
        unset($build['tripal_feature_base']);
        unset($build['tripal_feature_properties']);
        unset($build['tripal_feature_genotypes']);
        break;
      case 'sequence_feature':
        unset($build['tripal_feature_base']);
        unset($build['tripal_feature_seqence']);
        break;
    }
  }
  
  // Stock
  if (property_exists($node, 'stock')) {
    unset($build['tripal_stock_base']);
    unset($build['tripal_stock_properties']);
    unset($build['tripal_stock_relationships']);
    unset($build['tripal_stock_references']);
    unset($build['tripal_stock_synonyms']);
    unset($build['tripal_stock_collections']);
  }
  
  // Map
  if (property_exists($node, 'featuremap')) {
    unset($build['tripal_featuremap_base']);
    unset($build['tripal_featuremap_properties']);
    unset($build['tripal_featuremap_featurepos']);
  }
  
  // Environment
  if (property_exists($node, 'nd_geolocation')) {
    unset($build['tripal_nd_geolocation_base']);
  }
  //Eimage
  if (property_exists($node, 'eimage')) {
    unset($build['tripal_eimage_base']);
  }
}


/**
 *  We need to let drupal know about our theme functions and their arguments.
 *  We create theme functions to allow users of the module to customize the
 *  look and feel of the output generated in this module
 *
 * @ingroup mainlab_tripal
 */
function mainlab_tripal_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'mainlab_tripal') . '/theme/';
  $core_path = drupal_get_path('module', 'tripal_core');
  $themes = array();
  $templates = mainlab_tripal_get_templates ();
  $settings = variable_get('mainlab_tripal_enabled_templates', array());
  
  foreach ($templates AS $key => $file) {
    if ($settings[$key]) {
      $themes[$file->name] = array(
        'variables' => array('node' => NULL),
        'template' => $file->name,
        'path' => $path . $file->folder,
      );
    }
  }
  /*
  $themes = array(
    'tripal_organism_custom_base' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_custom_base',
      'path' => $path . '/tripal_organism',
    ),
    'tripal_organism_relationships' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_relationships',
      'path' => $path . '/tripal_organism',    
    ),
    'tripal_organism_properties' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_properties',
      'path' => $path . '/tripal_organism',    
    ),
    'tripal_organism_maps' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_maps',
      'path' => $path . '/tripal_organism',    
    ),
  	'tripal_feature_contact' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_feature_contact',
  			'path' => $path . '/tripal_feature',
  	),
    'tripal_feature_custom_references' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_custom_references',
      'path' => $path . '/tripal_feature',
    ),
  	'tripal_feature_genetic_marker_base' => array(
  				'variables' => array('node' => NULL),
  				'template' => 'tripal_feature_genetic_marker_base',
  				'path' => $path . '/tripal_feature',
  	),
  	'tripal_feature_genetic_marker_map_positions' => array(
  		'variables' => array('node' => NULL),
  		'template' => 'tripal_feature_genetic_marker_map_positions',
  		'path' => $path . '/tripal_feature',
  	 ),
    'tripal_feature_genetic_marker_genotypes' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_genetic_marker_genotypes',
      'path' => $path . '/tripal_feature',
    ),
    'tripal_feature_genetic_marker_sequence' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_genetic_marker_sequence',
      'path' => $path . '/tripal_feature',
    ),
     'tripal_feature_genetic_marker_image' => array(
        'variables' => array('node' => NULL),
        'template' => 'tripal_feature_genetic_marker_image',
        'path' => $path . '/tripal_feature',
     ),
  	 'tripal_feature_sequence_feature_base' => array(
  				'variables' => array('node' => NULL),
  				'template' => 'tripal_feature_sequence_feature_base',
  				'path' => $path . '/tripal_feature',
  	 ),
  	'tripal_featuremap_custom_base' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_featuremap_custom_base',
  			'path' => $path . '/tripal_featuremap',
  	),
  	'tripal_featuremap_stock' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_featuremap_stock',
  			'path' => $path . '/tripal_featuremap',
  	),
    'tripal_featuremap_map_loci' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_featuremap_map_loci',
      'path' => $path . '/tripal_featuremap',
    ),
  	'tripal_featuremap_publication' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_featuremap_publication',
  			'path' => $path . '/tripal_featuremap',
  	),
  	'tripal_featuremap_contact' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_featuremap_contact',
  			'path' => $path . '/tripal_featuremap',
  	),
  	'mainlab_polymorphism' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'mainlab_polymorphism',
  			'path' => $path . '/mainlab',
  	),
  	'mainlab_allele' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'mainlab_allele',
  			'path' => $path . '/mainlab',
  	),
 	'gdr_mainlab_polymorphism' => array(
 			'variables' => array('node' => NULL),
 			'template' => 'gdr_mainlab_polymorphism',
 			'path' => $path . '/mainlab',
 	),
 	'gdr_mainlab_allele' => array(
 			'variables' => array('node' => NULL),
 			'template' => 'gdr_mainlab_allele',
 			'path' => $path . '/mainlab',
 	),
    'tripal_stock_custom_base' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_stock_custom_base',
      'path' => $path . '/tripal_stock',
    ),
    'tripal_stock_alias' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_stock_alias',
      'path' => $path . '/tripal_stock',
    ),
  	'tripal_stock_maternal_parent' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_maternal_parent',
  			'path' => $path . '/tripal_stock',
  	),
  	'tripal_stock_paternal_parent' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_paternal_parent',
  			'path' => $path . '/tripal_stock',
  	),
  	'tripal_stock_phenotypic_data' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_phenotypic_data',
  			'path' => $path . '/tripal_stock',
  	),
  	'tripal_stock_genotypic_data' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_genotypic_data',
  			'path' => $path . '/tripal_stock',
  	),
  	'tripal_stock_in_collection' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_in_collection',
  			'path' => $path . '/tripal_stock',
  	),
  	'tripal_stock_population_map' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_population_map',
  			'path' => $path . '/tripal_stock',
  	),
    'tripal_stock_library' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_stock_library',
      'path' => $path . '/tripal_stock',
    ),
  	'tripal_stock_image' => array(
  			'variables' => array('node' => NULL),
  			'template' => 'tripal_stock_image',
  			'path' => $path . '/tripal_stock',
  	),
    'tripal_pub_image' => array(
        'variables' => array('node' => NULL),
        'template' => 'tripal_pub_image',
        'path' => $path . '/tripal_pub',
    ),
    // themed forms
    'mainlab_tripal_seq_extract_form' => array(
       'variables' => array('form'),
    ),
    // nd_geolocation
    'node__chado_nd_geolocation' => array(
      'template' => 'node--chado-generic',
      'render element' => 'node',
      'base hook' => 'node',
      'path' => "$core_path/theme/templates",
    ),
    'tripal_nd_geolocation_custom_base' => array(
        'variables' => array('node' => NULL),
        'template' => 'tripal_nd_geolocation_custom_base',
        'path' => $path . '/tripal_natural_diversity',
    ),
    'tripal_nd_geolocation_associated_dataset' => array(
        'variables' => array('node' => NULL),
        'template' => 'tripal_nd_geolocation_associated_dataset',
        'path' => $path . '/tripal_natural_diversity',
    ),
    // eimage
    'cottongen_tripal_eimage_base' => array(
        'variables' => array('node' => NULL),
        'template' => 'cottongen_tripal_eimage_base',
        'path' => $path . '/tripal_eimage',
    ),
    // eimage
    'tripal_eimage_contact' => array(
        'variables' => array('node' => NULL),
        'template' => 'tripal_eimage_contact',
        'path' => $path . '/tripal_eimage',
    ),
    'tripal_feature_haplotype_block' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_haplotype_block',
      'path' => $path . '/tripal_feature',
    ),
    'tripal_feature_haplotype_block_stocks' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_haplotype_block_stocks',
      'path' => $path . '/tripal_feature',
    ),
    'tripal_feature_haplotype_block_haplotypes' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_haplotype_block_haplotypes',
      'path' => $path . '/tripal_feature',
    ),
    'cottongen_tripal_organism_base' => array(
      'variables' => array('node' => NULL),
      'template' => 'cottongen_tripal_organism_base',
      'path' => $path . '/tripal_organism',
    ),
    'cottongen_tripal_organism_alias' => array(
      'variables' => array('node' => NULL),
      'template' => 'cottongen_tripal_organism_alias',
      'path' => $path . '/tripal_organism',
    ),
    'cottongen_tripal_organism_stocks' => array(
      'variables' => array('node' => NULL),
      'template' => 'cottongen_tripal_organism_stocks',
      'path' => $path . '/tripal_organism',
    ),
  );
  */
  return $themes;
}

/**
 * Return the site name
 * @return string:
 *  'gdr' for Rosaceae Genomic Database
 *  'cottongen' for CottonGen
 */
function mainlab_tripal_get_site () {
	global $base_url;
	if (preg_match('/rosaceae\.org/', $base_url) || preg_match('/rosaceae\.org/', $_SERVER['SERVER_NAME'])) {
		return 'gdr';
	} else if (preg_match('/cottongen\.org/', $base_url) || preg_match('/cottongen\.org/', $_SERVER['SERVER_NAME'])) {
		return 'cottongen';
	} else {
		return 'unknown';
	}
}
/**
 * Hook to Tripal Pub form to add a tutorial link
 * @param unknown $form
 * @param unknown $form_state
 */
function mainlab_tripal_form_tripal_pub_search_form_alter (&$form, &$form_state) {
  $tutorial = db_query("select pid from url_alias where alias = 'tutorial/publication_search'")->fetchField();
  if ($tutorial) {
    $val = $form['instructions']['#markup'];
    $form['instructions']['#markup'] = $val . "(<a href=\"/tutorial/publication_search\"><b>Help</b></a>)";
  }
}

function mainlab_tripal_get_templates() {
  $theme = array ();
  $theme_path = drupal_get_path('module', 'mainlab_tripal') . '/theme';
  $templates = file_scan_directory($theme_path, '/\.tpl\.php/', array('recurse' => TRUE));
  
  foreach ($templates AS $path => $template) {
    $file = new stdClass();
    $file->name = str_replace('.tpl.php', '' , $template->filename);
    $folder = trim(str_replace(array($theme_path, $template->filename), array('', ''), $path), '/');
    if ($folder) {
      $file->folder = $folder;
      $key = 'mainlab_tripal--' . $folder.'--'. $file->name;
    }
    $theme[$key] = $file;
  }  
  ksort($theme);
  return $theme;
}